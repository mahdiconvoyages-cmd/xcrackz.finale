-- ============================================
-- TEST DIRECT: Fonction join_mission_with_code
-- ============================================

-- √âTAPE 1: V√©rifier que des missions avec codes existent
SELECT 
    COUNT(*) as total_missions,
    COUNT(share_code) as missions_avec_code
FROM missions;

-- √âTAPE 2: R√©cup√©rer les codes disponibles
SELECT 
    share_code as "üìã Code √† tester",
    reference as "Mission",
    status as "Statut",
    user_id as "Cr√©ateur (NE PAS utiliser ce user_id)",
    assigned_to_user_id as "D√©j√† assign√©e √†"
FROM missions 
WHERE share_code IS NOT NULL
ORDER BY created_at DESC
LIMIT 5;

-- √âTAPE 3: R√©cup√©rer votre user_id actuel
SELECT auth.uid() as "üîë MON USER_ID (√† utiliser pour tester)";

-- √âTAPE 4: TEST MANUEL - Remplacez les valeurs ci-dessous
-- Copiez un code de l'√âTAPE 2 et votre user_id de l'√âTAPE 3

/*
SELECT join_mission_with_code(
    'XZ-ABC-123',  -- Remplacer par un vrai code de l'√âTAPE 2
    'votre-user-id'::uuid  -- Remplacer par votre user_id de l'√âTAPE 3
) as resultat;
*/

-- √âTAPE 5: Si aucune mission n'a de code, en g√©n√©rer
DO $$
DECLARE
    mission_count INTEGER;
BEGIN
    SELECT COUNT(*) INTO mission_count FROM missions WHERE share_code IS NULL;
    
    IF mission_count > 0 THEN
        RAISE NOTICE 'G√©n√©ration de codes pour % missions...', mission_count;
        
        UPDATE missions 
        SET share_code = generate_share_code()
        WHERE share_code IS NULL;
        
        RAISE NOTICE '‚úÖ Codes g√©n√©r√©s!';
    ELSE
        RAISE NOTICE '‚ÑπÔ∏è Toutes les missions ont d√©j√† un code';
    END IF;
END $$;
